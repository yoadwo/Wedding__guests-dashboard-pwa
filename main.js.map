{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material.module.ts","./src/app/services/guests/guests.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { Observable } from 'rxjs';\nimport { guestEM } from './models/guest';\nimport { GuestsService } from './services/guests/guests.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'guests-dashboard-pwa';\n  //guests: guestEM[] | null;\n  rsvpLink: string;\n  dataSource: MatTableDataSource<guestEM>;\n  displayedColumns: string[] = ['recipient', 'phoneNumber', 'linkCreator', 'copyCreator', 'status', 'attendingCount'];\n  eventDescription:string = `נשמח לראותכם בחתונה של שירלי צדוק ויועד וולפסטל, שתיערך ב\"עדן על המים\" ב-29.6. אנא אשרו השתתפותכם בקישור הבא: `;\n  shuttleDescription:string = `בנוסף, לחצו כאן כדי להירשם להסעה: https://forms.gle/XMMMfSxGyL65R6T36`\n\n  constructor(private guestsService: GuestsService) {\n    //this.guests = null;\n    this.dataSource = new MatTableDataSource();\n    this.rsvpLink = \"\";\n  }\n  async ngOnInit(): Promise<void> {\n    this.guestsService.getGuestsInfo().subscribe(resp => {\n      //this.guests = resp.data.guests;\n      this.dataSource = new MatTableDataSource(resp.data.guests);\n      this.rsvpLink = resp.data.rsvpLink;\n    })\n  }\n\n  rsvpStatus(status?: number) {\n    switch (status) {\n      case -1:\n        return 'לא מגיע';\n      case 0:\n        return 'אולי';\n      case 1:\n        return 'מגיע';\n      default:\n        return '??';\n    }\n  }\n\n  filterValues(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    if (this.dataSource) {\n      this.dataSource.filter = filterValue.trim();\n      console.log('data', this.dataSource.data);\n      console.log('filtered', this.dataSource.filteredData);\n    }\n  }\n\n  filterNotResponded(event: MatSlideToggleChange) {\n    if (event.checked) {\n      this.dataSource = new MatTableDataSource(this.dataSource.data.filter(g => g.status == null));\n    } else {\n      this.guestsService.getGuestsInfo().subscribe(resp => {\n        //this.guests = resp.data.guests;\n        this.dataSource = new MatTableDataSource(resp.data.guests);\n        this.rsvpLink = resp.data.rsvpLink;\n      })\n    }\n  }\n  \n  sendTextsToSelected(guest: guestEM) {\n    let personalised = `הי ${guest.recipient}`\n    let link = this.rsvpLink + guest.phoneNumberHash;\n    let message = `${personalised}, ${this.eventDescription} ${link}  ${this.shuttleDescription}`;\n    let number = guest.phoneNumber;\n    window.open(`https://web.whatsapp.com/send?phone=+972${number}&text=${encodeURI(message)}`, \"_blank\");\n  }\n\n  copyToClipboard(guest: guestEM) {\n    let personalised = `הי ${guest.recipient}`\n    let link = this.rsvpLink + guest.phoneNumberHash;\n    let message = `${personalised}, ${this.eventDescription} ${link}\\n\\n${this.shuttleDescription}`;\n    navigator.clipboard.writeText(message)\n    .then(() => {\n      console.log('Text copied to clipboard');\n    })\n    .catch((error) => {\n      console.error('Failed to copy text to clipboard:', error);\n    });\n  }\n}\n","<cdk-virtual-scroll-viewport class=\"viewport\" itemSize=\"10\">\n    <mat-form-field>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"filterValues($event)\" placeholder=\"Ex. ium\" #input />\n    </mat-form-field>\n    <mat-slide-toggle (change)=\"filterNotResponded($event)\">Completed Only</mat-slide-toggle>\n\n    <table mat-table fixedLayout [dataSource]=\"dataSource\" multiTemplateDataRows matSort>\n        <!-- recipient full name -->\n        <ng-container matColumnDef=\"recipient\">\n            <th mat-header-cell *matHeaderCellDef> שם המוזמן </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.recipient}} </td>\n        </ng-container>\n\n        <!-- recipient phone number -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef> טלפון </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.phoneNumber}} </td>\n        </ng-container>\n\n        <!-- button to open whatsapp tab with recipient and message -->\n        <ng-container matColumnDef=\"linkCreator\">\n            <th mat-header-cell *matHeaderCellDef> לחצו לשליחה לווצפ </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button color=\"primary\" (click)=\"sendTextsToSelected(element)\">\n                לחצו\n            </button> </td>\n        </ng-container>\n\n        <!-- button to only copy the message to the clipboard -->\n        <ng-container matColumnDef=\"copyCreator\">\n            <th mat-header-cell *matHeaderCellDef> לחצו ליצירת הודעה </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button color=\"primary\" (click)=\"copyToClipboard(element)\">\n                רק העתקה\n            </button> </td>\n        </ng-container>\n\n        <!-- recipient status -->\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> סטטוס אישור </th>\n            <td mat-cell *matCellDef=\"let element\"> {{rsvpStatus(element.status)}} </td>\n        </ng-container>\n\n        <!-- recipient attending count -->\n        <ng-container matColumnDef=\"attendingCount\">\n            <th mat-header-cell *matHeaderCellDef> כמות מאשרים </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.attendingCount}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No records found.</td>\n        </tr>\n    </table>\n</cdk-virtual-scroll-viewport>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from \"@angular/core\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from \"@angular/material/list\";\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { MatTableModule} from '@angular/material/table';\nimport { ScrollingModule} from \"@angular/cdk/scrolling\";\n\n\n@NgModule({\n    exports: [\n      MatButtonModule,\n      MatCheckboxModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatListModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      ScrollingModule \n    ]\n  })\n  export class MaterialModule {}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { guestEM, guestRM, guestsResponse } from 'src/app/models/guest';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestsService {\n\n  constructor(private http: HttpClient) { }\n\n  getGuestsInfo(){\n    return this.http.get<guestsResponse>(environment.getGuestsInfo + '/get-guests-info')\n  }\n\n  // private handleError(error: HttpErrorResponse) {\n  //   if (error.status === 0) {\n  //     // A client-side or network error occurred. Handle it accordingly.\n  //     console.error('An error occurred:', error.error);\n  //   } else {\n  //     // The backend returned an unsuccessful response code.\n  //     // The response body may contain clues as to what went wrong.\n  //     console.error(\n  //       `Backend returned code ${error.status}, body was: `, error.error);\n  //   }\n  //   // Return an observable with a user-facing error message.\n  //   return throwError(() => new Error('Something bad happened; please try again later.'));\n  // }\n}\n","export const environment = {\n    getGuestsInfo: 'https://yemz5f82ph.execute-api.us-east-1.amazonaws.com/dev',\n    textGuests: 'https://yemz5f82ph.execute-api.us-east-1.amazonaws.com/dev',\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["MatTableDataSource","i0","AppComponent","constructor","guestsService","dataSource","rsvpLink","ngOnInit","getGuestsInfo","subscribe","resp","data","guests","rsvpStatus","status","filterValues","event","filterValue","target","value","filter","trim","console","log","filteredData","filterNotResponded","checked","g","sendTextsToSelected","guest","personalised","recipient","link","phoneNumberHash","message","eventDescription","shuttleDescription","number","phoneNumber","window","open","encodeURI","copyToClipboard","navigator","clipboard","writeText","then","catch","error","selectors","decls","vars","consts","template","ctx","BrowserModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","AppModule","bootstrap","declarations","imports","MatButtonModule","MatCheckboxModule","MatFormFieldModule","MatInputModule","MatListModule","MatSlideToggleModule","MatTableModule","ScrollingModule","exports","environment","GuestsService","http","get","factory","providedIn","textGuests","__NgCli_bootstrap_1","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}